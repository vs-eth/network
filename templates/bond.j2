# Managed by ansible (role: network), do not edit!

{% for intf in item.value.slaves %}
# {{ intf }} is slave
{% endfor %}

{% if network_mode == 'classic' %}
auto {{ item.key }}
iface {{ item.key }} inet {{ 'static' if 'ip' in item.value else 'manual' }}
	bond-slaves {{ item.value.slaves|join(' ') }}
{% if 'bondmode' in item.value %}
	bond-mode {{ item.value.bondmode }}
{% else %}
	bond-mode 802.3ad
	bond-xmit-hash-policy layer3+4
	bond-miimon 100
	bond-lacp-rate 1
	bond-min-links 1
	post-up {{ 'sleep 20 && ' if 'delay_up' in item.value and item.value.delay_up else '' }}echo 1000 > /sys/class/net/${IFACE}/bonding/ad_actor_sys_prio
{% endif %}
{% else %}
auto {{ item.key }}br

allow-{{ item.key }}br {{ item.key }}
iface {{ item.key }} inet manual
	ovs-type OVSBond
	ovs-bonds {{ item.value.slaves|join(' ') }}
	ovs-options bond_mode=balance-tcp lacp=active vlan_mode=native-untagged tag={{ ovs_untagged_vlan }}
	ovs-bridge {{ item.key }}br

allow-ovs {{ item.key }}br
iface {{ item.key }}br inet manual
	ovs-type OVSBridge
	ovs-ports {{ item.key }} {{item.key}}if

allow-{{ item.key }}br {{ item.key }}if
iface {{ item.key }}if inet static
	ovs-type OVSIntPort
	ovs-bridge ${IFACE}br
	ovs-options tag={{ ovs_untagged_vlan }}
	ovs-extra set interface ${IFACE} external-ids:iface-id=$(hostname -s)-${IFACE}-vif
{% endif %}
{% if 'ip' in item.value %}
	address {{ item.value.ip | ipaddr('address/prefix') }}
{% endif %}
{% if 'gateway' in item.value %}
{% if 'rt' in item.value %}
	post-up ip route add {{ item.value.ip|ipaddr('subnet') }} dev ${IFACE} src {{ item.value.ip | ipaddr('address') }} table {{ item.value.rt }}
	post-up ip route add default via {{ item.value.gateway }} dev ${IFACE} table {{ item.value.rt }}
	post-up ip rule add from {{ item.value.ip | ipaddr('address') }}/32 table {{ item.value.rt }}
	post-up ip rule add to {{ item.value.ip | ipaddr('address') }}/32 table {{ item.value.rt }}
{% else %}
	gateway {{ item.value.gateway }}
{% endif %}
{% endif %}
{% if 'dns' in item.value %}
	dns-nameservers {{ item.value.dns }}
{% endif %}
{% if 'dnssearch' in item.value %}
	dns-search {{ item.value.dnssearch }}
{% endif %}
{% if 'postup' in item.value %}
	post-up {{ item.value.postup }}
{% endif %}

{% if 'ip6' in item.value %}
{% if item.value.ip6 == "dhcp" %}
iface {{ item.key }} inet6 dhcp
{% if 'prefix' in item.value %}
	request_prefix 1
{% endif %}
{% else %}
iface {{ item.key }} inet6 static
	address {{ item.value.ip6 }}
{% if 'rt' in item.value %}
	post-up ip -6 route add {{ item.value.ip6|ipaddr('subnet') }} dev ${IFACE} src {{ item.value.ip6 | ipaddr('address') }} table {{ item.value.rt }}
	post-up ip -6 route add default via {{ item.value.gateway6 }} dev ${IFACE} table {{ item.value.rt }}
	post-up ip -6 rule add from {{ item.value.ip6 }} table {{ item.value.rt }}
	post-up ip -6 rule add to {{ item.value.ip6 }} table {{ item.value.rt }}
	accept_ra 0
	autoconf 0
{% endif %}
{% endif %}
{% else %}
iface {{ item.key }} inet6 manual
	# Explicitly disabling acceptance of RAs can race, disable IPv6 on this interface instead.
	post-up echo 1 > /proc/sys/net/ipv6/conf/${IFACE}/disable_ipv6
{% endif %}
